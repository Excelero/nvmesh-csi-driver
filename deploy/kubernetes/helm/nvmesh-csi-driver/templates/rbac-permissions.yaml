# This YAML file contains all RBAC objects that are necessary to run external
# CSI provisioner.
#
# In production, each CSI driver deployment has to be customized:
# - to avoid conflicts, use non-default namespace and different names
#   for non-namespaced entities like the ClusterRole
# - decide whether the deployment replicates the external CSI
#   provisioner, in which case leadership election must be enabled;
#   this influences the RBAC setup, see below


#
#  Permissions for provisioner
#
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ template "nvmesh-csi-driver.fullname" . }}:external-provisioner-runner
rules:
  # The following rule should be uncommented for plugins that require secrets
  # for provisioning.
  # - apiGroups: [""]
  #   resources: ["secrets"]
  #   verbs: ["get", "list"]
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "create", "delete"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["storageclasses"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["list", "watch", "create", "update", "patch"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshots"]
    verbs: ["get", "list"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshotcontents"]
    verbs: ["get", "list"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["csinodes"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get", "list", "watch"]

---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ template "nvmesh-csi-driver.fullname" . }}:csi-provisioner-role
subjects:
  - kind: ServiceAccount
    name: {{ template "nvmesh-csi-driver.serviceAccountName" . }}
    namespace: {{ template "nvmesh-csi-driver.namespace" . }}
roleRef:
  kind: ClusterRole
  name: {{ template "nvmesh-csi-driver.fullname" . }}:external-provisioner-runner
  apiGroup: rbac.authorization.k8s.io

---
# Provisioner must be able to work with endpoints in current namespace
# if (and only if) leadership election is enabled
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: {{ template "nvmesh-csi-driver.namespace" . }}
  name: {{ template "nvmesh-csi-driver.fullname" . }}:external-provisioner-cfg
rules:
# Only one of the following rules for endpoints or leases is required based on
# what is set for `--leader-election-type`. Endpoints are deprecated in favor of Leases.
- apiGroups: [""]
  resources: ["endpoints"]
  verbs: ["get", "watch", "list", "delete", "update", "create"]
- apiGroups: ["coordination.k8s.io"]
  resources: ["leases"]
  verbs: ["get", "watch", "list", "delete", "update", "create"]
- apiGroups: ["storage.k8s.io"]
  resources: ["volumeattachments"]
  verbs: ["get", "list", "watch"]

---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ template "nvmesh-csi-driver.fullname" . }}:csi-provisioner-role-cfg
  namespace: {{ template "nvmesh-csi-driver.namespace" . }}
subjects:
  - kind: ServiceAccount
    name: {{ template "nvmesh-csi-driver.serviceAccountName" . }}
roleRef:
  kind: Role
  name: {{ template "nvmesh-csi-driver.fullname" . }}:external-provisioner-cfg
  apiGroup: rbac.authorization.k8s.io


#
#  Permissions for attacher
#
---
# Attacher must be able to work with PVs, nodes and VolumeAttachments
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ template "nvmesh-csi-driver.fullname" . }}:external-attacher-runner
rules:
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["csinodes"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["volumeattachments"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["volumeattachments/status"]
    verbs: ["get", "list", "watch", "update", "patch"]
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "watch", "list"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ template "nvmesh-csi-driver.fullname" . }}:csi-attacher-role
subjects:
  - kind: ServiceAccount
    name: {{ template "nvmesh-csi-driver.serviceAccountName" . }}
    namespace: {{ template "nvmesh-csi-driver.namespace" . }}
roleRef:
  kind: ClusterRole
  name: {{ template "nvmesh-csi-driver.fullname" . }}:external-attacher-runner
  apiGroup: rbac.authorization.k8s.io

---
# Attacher must be able to work with configmaps or leases in the current namespace
# if (and only if) leadership election is enabled
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: {{ template "nvmesh-csi-driver.namespace" . }}
  name: {{ template "nvmesh-csi-driver.fullname" . }}:external-attacher-cfg
rules:
# access to configmaps is only supported for backwards compatibility reasons
# and can be removed once you are uses Leases (--leader-election-type=leases)
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get", "watch", "list", "delete", "update", "create"]
- apiGroups: ["coordination.k8s.io"]
  resources: ["leases"]
  verbs: ["get", "watch", "list", "delete", "update", "create"]

---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ template "nvmesh-csi-driver.fullname" . }}:csi-attacher-role-cfg
  namespace: {{ template "nvmesh-csi-driver.namespace" . }}
subjects:
  - kind: ServiceAccount
    name: {{ template "nvmesh-csi-driver.serviceAccountName" . }}
roleRef:
  kind: Role
  name: {{ template "nvmesh-csi-driver.fullname" . }}:external-attacher-cfg
  apiGroup: rbac.authorization.k8s.io

#
#  Permissions for resizer
#
# This YAML file contains all RBAC objects that are necessary to run external
# CSI resizer.
#
# In production, each CSI driver deployment has to be customized:
# - to avoid conflicts, use non-default namespace and different names
#   for non-namespaced entities like the ClusterRole
# - decide whether the deployment replicates the external CSI
#   resizer, in which case leadership election must be enabled;
#   this influences the RBAC setup, see below

---
# Resizer must be able to work with PVCs, PVs, SCs.
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ template "nvmesh-csi-driver.fullname" . }}:external-resizer-runner
rules:
  # The following rule should be uncommented for plugins that require secrets
  # for provisioning.
  # - apiGroups: [""]
  #   resources: ["secrets"]
  #   verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "update", "patch"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims/status"]
    verbs: ["update", "patch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["storageclasses"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["list", "watch", "create", "update", "patch"]

---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ template "nvmesh-csi-driver.fullname" . }}:csi-resizer-role
subjects:
  - kind: ServiceAccount
    name: {{ template "nvmesh-csi-driver.serviceAccountName" . }}
    namespace: {{ template "nvmesh-csi-driver.namespace" . }}
roleRef:
  kind: ClusterRole
  name: {{ template "nvmesh-csi-driver.fullname" . }}:external-resizer-runner
  apiGroup: rbac.authorization.k8s.io

---
# Resizer must be able to work with end point in current namespace
# if (and only if) leadership election is enabled
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: {{ template "nvmesh-csi-driver.namespace" . }}
  name: {{ template "nvmesh-csi-driver.fullname" . }}:external-resizer-cfg
rules:
- apiGroups: ["coordination.k8s.io"]
  resources: ["leases"]
  verbs: ["get", "watch", "list", "delete", "update", "create"]

---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ template "nvmesh-csi-driver.fullname" . }}:csi-resizer-role-cfg
  namespace: {{ template "nvmesh-csi-driver.namespace" . }}
subjects:
  - kind: ServiceAccount
    name: {{ template "nvmesh-csi-driver.serviceAccountName" . }}
roleRef:
  kind: Role
  name: {{ template "nvmesh-csi-driver.fullname" . }}:external-resizer-cfg
  apiGroup: rbac.authorization.k8s.io

{{ if .Values.pspEnabled }}
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ template "nvmesh-csi-driver.namespace" . }}-use-psp
rules:
  - apiGroups: ["policy"]
    resourceNames: ["psp.{{ template "nvmesh-csi-driver.fullname" . }}"]
    resources: ["podsecuritypolicies"]
    verbs: ["use"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ template "nvmesh-csi-driver.namespace" . }}-use-psp
subjects:
  - kind: ServiceAccount
    name: {{ template "nvmesh-csi-driver.serviceAccountName" . }}
    namespace: {{ template "nvmesh-csi-driver.namespace" . }}
roleRef:
  kind: ClusterRole
  name: {{ template "nvmesh-csi-driver.namespace" . }}-use-psp
  apiGroup: rbac.authorization.k8s.io
{{ end }}
