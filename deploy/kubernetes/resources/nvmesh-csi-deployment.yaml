#---
#apiVersion: v1
#kind: ServiceAccount
#metadata:
#  name: nvmesh-csi
#  labels:
#    app: nvmesh-csi
#---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: nvmesh-csi-controller
  namespace: nvmesh-csi
---

# needed for StatefulSet
kind: Service
apiVersion: v1
metadata:
  name: nvmesh-csi-controller
  labels:
    app: nvmesh-csi
spec:
  selector:
    app: nvmesh-csi
  ports:
    - name: dummy
      port: 12345
---
#
# NVMesh CSI Controller Driver StatefulSet Deployment
#
kind: StatefulSet
apiVersion: apps/v1beta1
metadata:
  name: nvmesh-csi-controller
  namespace: nvmesh-csi
spec:
  serviceName: "nvmesh-csi-controller"
  replicas: 1
  template:
    metadata:
      labels:
        app: nvmesh-csi
    spec:
      serviceAccount: nvmesh-csi-controller
      containers:
        # NVMesh Driver
        - name: nvmesh-csi-plugin
          # if we use image tag :latest kubernetes will try to fetch from Docker Hub (hub.docker.com)
          image: excelero/nvmesh-csi-plugin:v0.0.1
          imagePullPolicy: "IfNotPresent"
          env:
            - name: SOCKET_PATH
              value: unix:///csi/ctrl-csi.sock
            - name: MANAGEMENT_SERVERS
              valueFrom:
                configMapKeyRef:
                  name: nvmesh-config
                  key: management.servers
            - name: MANAGEMENT_PROTOCOL
              valueFrom:
                configMapKeyRef:
                  name: nvmesh-config
                  key: management.protocol
            - name: MANAGEMENT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: nvmesh-credentials
                  key: username
            - name: MANAGEMENT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: nvmesh-credentials
                  key: password
          volumeMounts:
            - name: plugin-dir
              mountPath: /csi
        # Provisioner
        - name: csi-provisioner
          image: quay.io/k8scsi/csi-provisioner:v1.1.0
          args:
            - "--provisioner=nvmesh-csi.excelero.com"
            - "--csi-address=/csi/ctrl-csi.sock"
            - "--v=5"
          imagePullPolicy: "IfNotPresent"
          volumeMounts:
            - name: plugin-dir
              mountPath: /csi
        # Attacher
        - name: csi-attacher
          image: quay.io/k8scsi/csi-attacher:v1.1.0
          imagePullPolicy: "IfNotPresent"
          args:
            - "--v=5"
            - "--csi-address=/csi/ctrl-csi.sock"
          volumeMounts:
            - name: plugin-dir
              mountPath: /csi
        # Resizer
        - name: csi-resizer
          image: quay.io/k8scsi/csi-resizer:canary
          args:
            - "--v=5"
            - "--csi-address=/csi/ctrl-csi.sock"
            - "--leader-election"
          imagePullPolicy: "IfNotPresent"
          volumeMounts:
            - name: plugin-dir
              mountPath: /csi

      volumes:
        - name: plugin-dir
          hostPath:
            path: /var/lib/kubelet/plugins/nvmesh-csi.excelero.com/
            type: DirectoryOrCreate
        - name: registration-dir
          hostPath:
            path: /var/lib/kubelet/plugins_registry/
            type: Directory
---
#
# NVMesh Node Driver DaemonSet (Per Node) Deployment
#

kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: nvmesh-csi-node-driver
  namespace: nvmesh-csi

spec:
  selector:
    matchLabels:
      app: nvmesh-csi
  template:
    metadata:
      labels:
        app: nvmesh-csi
    spec:
      hostNetwork: true
      tolerations:
        # This would make the DaemonSet to be deployed also on the master node
        - key: node-role.kubernetes.io/master
          effect: NoSchedule
          operator: Exists
      containers:
        # NVMesh Driver
        - name: nvmesh-csi-plugin
          # if we use image tag :latest kubernetes will try to fetch from Docker Hub (hub.docker.com)
          image: excelero/nvmesh-csi-plugin:v0.0.1
          imagePullPolicy: "IfNotPresent"
          securityContext:
            privileged: true
            capabilities:
              add: ["SYS_ADMIN"]
            allowPrivilegeEscalation: true
          env:
            - name: SOCKET_PATH
              value: unix:///csi/csi.sock
            - name: MANAGEMENT_SERVERS
              valueFrom:
                configMapKeyRef:
                  name: nvmesh-config
                  key: management.servers
            - name: MANAGEMENT_PROTOCOL
              valueFrom:
                configMapKeyRef:
                  name: nvmesh-config
                  key: management.protocol
            - name: MANAGEMENT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: nvmesh-credentials
                  key: username
            - name: MANAGEMENT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: nvmesh-credentials
                  key: password
          volumeMounts:
            - name: plugin-dir
              mountPath: /csi
            - name: pods-mount-dir
              mountPath: /var/lib/kubelet
              # needed so that any mounts setup inside this container are
              # propagated back to the host machine.
              mountPropagation: "Bidirectional"
            - name: device-dir
              mountPath: /dev
                # Registrar
        - name: csi-driver-registrar
          image: quay.io/k8scsi/csi-node-driver-registrar:v1.1.0
          args:
            - "--csi-address=/csi/csi.sock"
            - "--kubelet-registration-path=/var/lib/kubelet/plugins/nvmesh-csi.excelero.com/csi.sock"
          lifecycle:
            preStop:
              exec:
                command: ["/bin/sh", "-c", "rm -rf /registration/nvmesh-csi.excelero.com /registration/nvmesh-csi.excelero.com-reg.sock"]
          volumeMounts:
            - name: plugin-dir
              mountPath: /csi
            - name: registration-dir
              mountPath: /registration
      volumes:
        - name: plugin-dir
          hostPath:
            path: /var/lib/kubelet/plugins/nvmesh-csi.excelero.com/
            type: DirectoryOrCreate
        - name: registration-dir
          hostPath:
            path: /var/lib/kubelet/plugins_registry/
            type: Directory
        - name: pods-mount-dir
          hostPath:
            path: /var/lib/kubelet
            type: Directory
        - name: device-dir
          hostPath:
            path: /dev
---
